

//////////////////////////////////////////////////////  FUNCTIONS

@function social-color($key: "twitter") {
  @return map-get($social-colors, $key);
}


////////////////////////////////////////////////////// MIXINS

@mixin social-button($color) {
  background: $color;
  color: $white;

  &:hover,
  &:focus {
    background: darken($color, 10%);
    color: $white;
  }
  &.btn-social-icon-text {
    padding: 0 1.5rem 0 0;
    background: lighten($color, 10%);
    i {
      background: $color;
      padding: .75rem;
      display: inline-block;
      margin-right: 1.5rem;
    }
  }
}

@mixin social-outline-button($color) {
  border: 1px solid $color;
  background: transparent;
  color: $color;
  &:hover {
    background: $color;
    color: $white;
  }
}

@mixin button-inverse-variant($color, $color-hover: $white) {
  background-color: rgba($color, 0.2);
  background-image: none;
  border-color: rgba($color, 0);
  &:not(.btn-inverse-light) {
    color: $color;
  }
  @include hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }

  &.focus,
  &:focus {
    box-shadow: 0 0 0 3px rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &.active,
  &:active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
}


@mixin pagination-variant($background,
      $border,
      $hover-background: lighten($background, 10%),
      $hover-border: lighten($border, 10%),
      $active-background: lighten($background, 10%),
      $active-border: lighten($border, 12.5%)
) {
  .page-link {
    color: $white; //color-yiq($hover-background)
    @include gradient-bg($background);
    border-color: $border;

    @include hover {
      color: color-yiq($hover-background);
      @include gradient-bg($hover-background);
      border-color: $hover-border;
    }
  }
  .page-item {
    &:focus,
    &.focus {
      .page-link {
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
          box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
        } @else {
          box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
        }
      }
    }

    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
      .page-link {
        color: color-yiq($background);
        background-color: $background;
        border-color: $border;
        // Remove CSS gradients if they're enabled
        @if $enable-gradients {
          background-image: none;
        }
      }
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
      .page-link {
        color: color-yiq($active-background);
        background-color: $active-background;
        @if $enable-gradients {
          background-image: none; // Remove the gradient for the pressed/active state
        }
        border-color: $active-border;
      }

      &:focus {
        .page-link {
          // Avoid using mixin so we can pass custom focus shadow properly
          @if $enable-shadows and $btn-active-box-shadow != none {
            box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
          } @else {
            box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
          }
        }
      }
    }
  }
}